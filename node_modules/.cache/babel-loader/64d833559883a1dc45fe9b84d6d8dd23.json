{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scott\\\\IntelliJ\\\\MandelbrotApp\\\\src\\\\Fractal.js\";\nimport React from 'react';\nimport './styles.css';\nimport Overlay from \"./Overlay.js\";\nimport Scale from \"./Scale.js\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { FlagSpinner } from \"react-spinners-kit\";\n\nvar bigdecimal = require(\"bigdecimal\");\n\nvar HALF_UP = bigdecimal.RoundingMode.HALF_UP();\n\nclass Fractal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      //zooms and focuses fractal on click\n      const canvas = this.refs.canvas;\n      let rect = canvas.getBoundingClientRect(); // abs. size of element\n\n      let realWidth = rect.width / rect.height < 4 / 3 ? new bigdecimal.BigDecimal(rect.height * 4 / 3) : new bigdecimal.BigDecimal(rect.width); //compensates for object-fit cover\n\n      let realHeight = rect.width / rect.height > 4 / 3 ? new bigdecimal.BigDecimal(rect.width * 3 / 4) : new bigdecimal.BigDecimal(rect.height);\n      let scaleX = new bigdecimal.BigDecimal(canvas.width).divide(realWidth, 25, HALF_UP);\n      let scaleY = new bigdecimal.BigDecimal(canvas.height).divide(realHeight, 25, HALF_UP);\n      let two = new bigdecimal.BigDecimal(2);\n      let newX = new bigdecimal.BigDecimal(e.clientX).subtract(new bigdecimal.BigDecimal(rect.width).divide(two)).add(realWidth.divide(two)).subtract(new bigdecimal.BigDecimal(rect.left)).multiply(scaleX);\n      let newY = new bigdecimal.BigDecimal(e.clientY).subtract(new bigdecimal.BigDecimal(rect.height).divide(two)).add(realHeight.divide(two)).subtract(new bigdecimal.BigDecimal(rect.top)).multiply(scaleY);\n      this.setState(prevState => {\n        return {\n          x: prevState.x.add(newX.subtract(new bigdecimal.BigDecimal(this.state.width).divide(two)).divide(new bigdecimal.BigDecimal(this.state.scale), 25, HALF_UP)),\n          y: prevState.y.add(newY.subtract(new bigdecimal.BigDecimal(this.state.height).divide(two)).divide(new bigdecimal.BigDecimal(this.state.scale), 25, HALF_UP)),\n          i: prevState.i += 10,\n          scale: prevState.scale * 2,\n          intro: false\n        };\n      });\n    };\n\n    this.state = {\n      width: 1920,\n      //the width of the fractal\n      height: 1440,\n      //the height of the fractal\n      x: new bigdecimal.BigDecimal(960 - 25),\n      y: new bigdecimal.BigDecimal(720),\n      i: 180,\n      //initial number of iterations\n      scale: 1,\n      //initial scale\n      intro: true,\n      loading: true,\n      loaded: false\n    };\n  }\n\n  imageLoaded() {\n    this.setState({\n      loaded: true,\n      loading: false\n    });\n  }\n\n  componentDidMount() {\n    //loads image to canvas to map bitmap to image for handleClick()\n    let canvas = this.refs.canvas;\n    let ctx = canvas.getContext(\"2d\");\n    let ctxTwo = this.refs.canvasTwo.getContext(\"2d\");\n    let img = this.refs.image;\n\n    img.onload = () => {\n      canvas.classList.remove(\"visible\");\n      ctxTwo.drawImage(img, 0, 0);\n      canvas.classList.add(\"fadeOut\");\n      setTimeout(function () {\n        ctx.drawImage(img, 0, 0);\n        canvas.classList.remove(\"fadeOut\");\n        canvas.classList.add(\"visible\");\n      }, 500);\n    };\n  } //    removeFade() {\n  //        let scale = this.refs.scale;\n  //        scale.classList.remove('scaleAnimation');\n  //        console.log(\"hit!\");\n  //    }\n\n\n  render() {\n    var url = \"http://localhost:8080/mandelbrot?\" + \"width=\" + this.state.width + \"&height=\" + this.state.height + \"&x=\" + this.state.x + \"&y=\" + this.state.y + \"&scale=\" + this.state.scale + \"&i=\" + this.state.i;\n    console.log(url);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"center\",\n      style: {\n        display: 'block',\n        zIndex: \"1\"\n      },\n      width: this.state.width,\n      height: this.state.height,\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvasTwo\",\n      className: \"center\",\n      style: {\n        display: 'block'\n      },\n      width: this.state.width,\n      height: this.state.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      onLoad: this.imageLoaded.bind(this),\n      className: \"center\",\n      ref: \"image\",\n      src: url,\n      alt: \"new\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), \";\");\n  }\n\n}\n\nexport default Fractal;","map":{"version":3,"sources":["C:/Users/scott/IntelliJ/MandelbrotApp/src/Fractal.js"],"names":["React","Overlay","Scale","LoadingOverlay","FlagSpinner","bigdecimal","require","HALF_UP","RoundingMode","Fractal","Component","constructor","props","handleClick","e","canvas","refs","rect","getBoundingClientRect","realWidth","width","height","BigDecimal","realHeight","scaleX","divide","scaleY","two","newX","clientX","subtract","add","left","multiply","newY","clientY","top","setState","prevState","x","state","scale","y","i","intro","loading","loaded","imageLoaded","componentDidMount","ctx","getContext","ctxTwo","canvasTwo","img","image","onload","classList","remove","drawImage","setTimeout","render","url","console","log","display","zIndex","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './styles.css'\r\nimport Overlay from \"./Overlay.js\"\r\nimport Scale from \"./Scale.js\"\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { FlagSpinner } from \"react-spinners-kit\";\r\n\r\nvar bigdecimal = require(\"bigdecimal\");\r\nvar HALF_UP = bigdecimal.RoundingMode.HALF_UP();\r\n\r\nclass Fractal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            width: 1920,        //the width of the fractal\r\n            height: 1440,        //the height of the fractal\r\n            x: new bigdecimal.BigDecimal(960 - 25),\r\n            y: new bigdecimal.BigDecimal(720),\r\n            i: 180,              //initial number of iterations\r\n            scale: 1,            //initial scale\r\n            intro: true,\r\n            loading: true,\r\n            loaded: false\r\n        };\r\n    }\r\n\r\n    handleClick = e => {                                //zooms and focuses fractal on click\r\n        const canvas = this.refs.canvas;\r\n        let rect = canvas.getBoundingClientRect();      // abs. size of element\r\n        let realWidth = (rect.width/rect.height < 4/3) ? new bigdecimal.BigDecimal((rect.height*4)/3) : new bigdecimal.BigDecimal(rect.width);    //compensates for object-fit cover\r\n        let realHeight = (rect.width/rect.height > 4/3) ? new bigdecimal.BigDecimal((rect.width*3)/4) : new bigdecimal.BigDecimal(rect.height);\r\n        let scaleX = (new bigdecimal.BigDecimal(canvas.width)).divide(realWidth, 25, HALF_UP);\r\n        let scaleY = (new bigdecimal.BigDecimal(canvas.height)).divide(realHeight, 25, HALF_UP);\r\n        let two = new bigdecimal.BigDecimal(2);\r\n\r\n        let newX = (new bigdecimal.BigDecimal(e.clientX).subtract(new bigdecimal.BigDecimal(rect.width).divide(two))\r\n                    .add(realWidth.divide(two)).subtract(new bigdecimal.BigDecimal(rect.left))).multiply(scaleX);\r\n         let newY = (new bigdecimal.BigDecimal(e.clientY).subtract(new bigdecimal.BigDecimal(rect.height).divide(two))\r\n                            .add(realHeight.divide(two)).subtract(new bigdecimal.BigDecimal(rect.top))).multiply(scaleY);\r\n\r\n        this.setState(prevState => {\r\n           return {\r\n            x: prevState.x.add((newX.subtract((new bigdecimal.BigDecimal(this.state.width)).divide(two))).divide(new bigdecimal.BigDecimal(this.state.scale), 25, HALF_UP)),\r\n            y: prevState.y.add((newY.subtract((new bigdecimal.BigDecimal(this.state.height)).divide(two))).divide(new bigdecimal.BigDecimal(this.state.scale), 25, HALF_UP)),\r\n           i: prevState.i+=10,\r\n           scale: prevState.scale*2,\r\n           intro: false}\r\n        })\r\n\r\n    }\r\n\r\n    imageLoaded(){\r\n\r\n                this.setState({loaded:true,\r\n                loading: false\r\n                })\r\n    }\r\n\r\n    componentDidMount() {                               //loads image to canvas to map bitmap to image for handleClick()\r\n        let canvas = this.refs.canvas\r\n        let ctx = canvas.getContext(\"2d\")\r\n        let ctxTwo = this.refs.canvasTwo.getContext(\"2d\")\r\n        let img = this.refs.image\r\n\r\n        img.onload = () => {\r\n            canvas.classList.remove(\"visible\");\r\n            ctxTwo.drawImage(img, 0, 0);\r\n            canvas.classList.add(\"fadeOut\");\r\n\r\n            setTimeout(function(){\r\n                ctx.drawImage(img, 0, 0);\r\n                canvas.classList.remove(\"fadeOut\");\r\n                canvas.classList.add(\"visible\");\r\n            }, 500);\r\n          }\r\n      }\r\n\r\n//    removeFade() {\r\n//        let scale = this.refs.scale;\r\n//        scale.classList.remove('scaleAnimation');\r\n//        console.log(\"hit!\");\r\n//    }\r\n\r\n    render() {\r\n        var url = \"http://localhost:8080/mandelbrot?\" +\r\n                        \"width=\" + this.state.width +\r\n                        \"&height=\" + this.state.height +\r\n                        \"&x=\" + this.state.x +\r\n                        \"&y=\" + this.state.y +\r\n                        \"&scale=\" + this.state.scale +\r\n                        \"&i=\" + this.state.i;\r\n\r\n    console.log(url);\r\n        return(\r\n\r\n    <React.Fragment>\r\n            <canvas ref=\"canvas\" className=\"center\" style={{display: 'block', zIndex: \"1\"}} width={this.state.width} height={this.state.height} onClick={this.handleClick.bind(this)}/>\r\n            <canvas ref=\"canvasTwo\" className=\"center\" style={{display: 'block'}} width={this.state.width} height={this.state.height}/>\r\n            <img onLoad={this.imageLoaded.bind(this)} className=\"center\" ref=\"image\" src={url} alt=\"new\" style={{display: 'none'}} />;\r\n\r\n    </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fractal;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar stackBlurImage = require('../lib/StackBlur.js');\n\nvar ReactBlur = function (_React$PureComponent) {\n  _inherits(ReactBlur, _React$PureComponent);\n\n  function ReactBlur() {\n    _classCallCheck(this, ReactBlur);\n\n    return _possibleConstructorReturn(this, (ReactBlur.__proto__ || Object.getPrototypeOf(ReactBlur)).apply(this, arguments));\n  }\n\n  _createClass(ReactBlur, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.loadImage();\n      window.addEventListener('resize', this.resize.bind(this));\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (!this.img) {\n        this.loadImage(this.props);\n      } else if (!this.isCurrentImgSrc(this.props.img)) {\n        this.img.src = this.props.img;\n        this.setDimensions();\n      } else {\n        // if some other prop changed reblur\n        stackBlurImage(this.img, this.canvas, this.getCurrentBlur(), this.width, this.height);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.resize.bind(this));\n    }\n  }, {\n    key: 'getCurrentBlur',\n    value: function getCurrentBlur() {\n      return this.props.blurRadius;\n    }\n  }, {\n    key: 'setDimensions',\n    value: function setDimensions() {\n      this.height = this.container.offsetHeight;\n      this.width = this.container.offsetWidth;\n      this.canvas.height = this.height;\n      this.canvas.width = this.width;\n    }\n  }, {\n    key: 'isCurrentImgSrc',\n    value: function isCurrentImgSrc(newSrc) {\n      // Handle relative paths\n      if (this.img) {\n        var newImg = new Image();\n        newImg.src = newSrc; // if absolute SRC is the same\n\n        return newImg.src === this.img.src;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'loadImage',\n    value: function loadImage() {\n      var _this2 = this;\n\n      if (this.isCurrentImgSrc(this.props.img)) {\n        stackBlurImage(this.img, this.canvas, this.props.blurRadius, this.width, this.height);\n        return;\n      }\n\n      this.img = new Image();\n      this.img.crossOrigin = 'Anonymous';\n\n      this.img.onload = function (event) {\n        stackBlurImage(_this2.img, _this2.canvas, _this2.getCurrentBlur(), _this2.width, _this2.height);\n\n        _this2.props.onLoadFunction(event);\n      };\n\n      this.img.onerror = function (event) {\n        // Remove the onerror listener.\n        // Preventing recursive calls caused by setting this.img.src to a falsey value\n        _this2.img.onerror = undefined;\n        _this2.img.src = '';\n\n        _this2.props.onLoadFunction(event);\n      };\n\n      this.img.src = this.props.img;\n      this.setDimensions();\n    }\n  }, {\n    key: 'resize',\n    value: function resize() {\n      var _this3 = this;\n\n      var now = new Date().getTime();\n      var deferTimer = void 0;\n      var threshhold = this.props.resizeInterval;\n\n      if (this.last && now < this.last + threshhold) {\n        clearTimeout(deferTimer);\n        deferTimer = setTimeout(function () {\n          _this3.last = now;\n\n          _this3.doResize();\n        }, threshhold);\n      } else {\n        this.last = now;\n        this.doResize();\n      }\n    }\n  }, {\n    key: 'doResize',\n    value: function doResize() {\n      this.setDimensions();\n      stackBlurImage(this.img, this.canvas, this.getCurrentBlur(), this.width, this.height);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props = this.props,\n          blurRadius = _props.blurRadius,\n          children = _props.children,\n          className = _props.className,\n          enableStyles = _props.enableStyles,\n          img = _props.img,\n          onLoadFunction = _props.onLoadFunction,\n          resizeInterval = _props.resizeInterval,\n          other = _objectWithoutProperties(_props, ['blurRadius', 'children', 'className', 'enableStyles', 'img', 'onLoadFunction', 'resizeInterval']);\n\n      var classes = 'react-blur';\n\n      if (className) {\n        classes += ' ' + className;\n      }\n\n      var containerStyle = enableStyles ? {\n        position: 'relative'\n      } : {};\n      var canvasStyle = enableStyles ? {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      } : {};\n      return _react2.default.createElement('div', _extends({\n        className: classes,\n        ref: function ref(_ref2) {\n          _this4.container = _ref2;\n        },\n        style: containerStyle\n      }, other), _react2.default.createElement('canvas', {\n        className: 'react-blur-canvas',\n        ref: function ref(_ref) {\n          _this4.canvas = _ref;\n        },\n        style: canvasStyle\n      }), children);\n    }\n  }]);\n\n  return ReactBlur;\n}(_react2.default.PureComponent);\n\nReactBlur.propTypes = {\n  blurRadius: _propTypes2.default.number,\n  children: _propTypes2.default.node,\n  className: _propTypes2.default.string,\n  enableStyles: _propTypes2.default.bool,\n  img: _propTypes2.default.string.isRequired,\n  onLoadFunction: _propTypes2.default.func,\n  resizeInterval: _propTypes2.default.number\n};\nReactBlur.defaultProps = {\n  blurRadius: 0,\n  children: null,\n  className: '',\n  enableStyles: false,\n  onLoadFunction: function onLoadFunction() {},\n  resizeInterval: 128\n};\nexports.default = ReactBlur;","map":null,"metadata":{},"sourceType":"script"}
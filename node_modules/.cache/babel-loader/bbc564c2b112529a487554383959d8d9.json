{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scott\\\\IntelliJ\\\\MandelbrotApp\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './styles.css';\n\nclass Image extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      e.persist();\n      const canvas = this.refs.canvas;\n      let rect = canvas.getBoundingClientRect();\n      let newX = e.clientX - rect.left;\n      let newY = e.clientY - rect.top;\n      this.setState(prevState => {\n        console.log(this.scale);\n        return {\n          x: (prevState.x + newX - 600) / this.state.stale,\n          y: (prevState.y + newY - 400) / this.state.stale,\n          scale: prevState.scale + 1\n        };\n      });\n      this.forceUpdate();\n    };\n\n    this.state = {\n      x: 600,\n      y: 400,\n      scale: 1\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    const img = this.refs.image;\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n    };\n  }\n\n  render() {\n    var url = \"http://localhost:8080/mandelbrot?translateX=\" + this.state.x + \"&translateY=\" + this.state.y + \"&scale=\" + this.state.scale;\n    console.log(url);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centerContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"center\",\n      width: 1200,\n      height: 800,\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"center\",\n      ref: \"image\",\n      src: url,\n      alt: \"new\",\n      display: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(Image, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 18\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/scott/IntelliJ/MandelbrotApp/src/index.js"],"names":["React","ReactDOM","Image","Component","constructor","props","handleClick","e","persist","canvas","refs","rect","getBoundingClientRect","newX","clientX","left","newY","clientY","top","setState","prevState","console","log","scale","x","state","stale","y","forceUpdate","componentDidMount","ctx","getContext","img","image","onload","drawImage","render","url","bind","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './styles.css'\n\nclass Image extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: 600,\n            y: 400,\n            scale: 1\n        };\n    }\n\n    handleClick = e => {\n        e.persist();\n\n\n\n        const canvas = this.refs.canvas;\n\n        let rect = canvas.getBoundingClientRect();\n        let newX = e.clientX - rect.left;\n        let newY = e.clientY - rect.top;\n\n\n\n        this.setState(prevState => {\n          console.log(this.scale);\n           return {\n           x: (prevState.x + newX - 600)/this.state.stale,\n           y: (prevState.y + newY - 400)/this.state.stale,\n           scale: prevState.scale+1}})\n           this.forceUpdate();\n    }\n\n\n\n    componentDidMount() {\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n        const img = this.refs.image\n\n        img.onload = () => {\n              ctx.drawImage(img, 0, 0)\n          }\n      }\n\n\n\n\n    render() {\n        var url = \"http://localhost:8080/mandelbrot?translateX=\" + this.state.x + \"&translateY=\" + this.state.y + \"&scale=\" + this.state.scale;\n        console.log(url);\n\n        return <div className=\"centerContainer\">\n                    <canvas ref=\"canvas\" className=\"center\" width={1200} height={800} onClick={this.handleClick.bind(this)}/>\n                    <img className=\"center\" ref=\"image\" src={url} alt=\"new\" display=\"none\" />\n                </div>\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( <Image />,  rootElement);"]},"metadata":{},"sourceType":"module"}
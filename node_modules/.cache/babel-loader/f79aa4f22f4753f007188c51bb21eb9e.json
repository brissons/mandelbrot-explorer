{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scott\\\\IntelliJ\\\\MandelbrotApp\\\\src\\\\Scale.js\";\nimport React from 'react';\nimport { Textfit } from 'react-textfit';\n\nclass Scale extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scale: this.props.scale\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.scale < 100000) {\n      this.setState({\n        scale: this.props.scale\n      });\n    } else {\n      this.setState({\n        scale: Number.parseFloat(this.props.scale).toExponential(1)\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'scaleBackground draw',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Textfit, {\n      mode: \"single\",\n      className: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      className: 'scale',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, this.props.scale, \"x\")));\n  }\n\n}\n\nexport default Scale;","map":{"version":3,"sources":["C:/Users/scott/IntelliJ/MandelbrotApp/src/Scale.js"],"names":["React","Textfit","Scale","Component","constructor","props","state","scale","componentDidUpdate","prevProps","setState","Number","parseFloat","toExponential","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACI,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,KAAKF,KAAL,CAAWE;AADV,KAAb;AAGP;;AAILC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAE1B,QAAG,KAAKJ,KAAL,CAAWE,KAAX,GAAmB,MAAtB,EAA8B;AAC1B,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAG,KAAKF,KAAL,CAAWE;AAApB,OAAd;AACH,KAFD,MAGK;AACD,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAGI,MAAM,CAACC,UAAP,CAAkB,KAAKP,KAAL,CAAWE,KAA7B,EAAoCM,aAApC,CAAkD,CAAlD;AAAT,OAAd;AACH;AACJ;;AAEAC,EAAAA,MAAM,GAAG;AACL,wBAEG;AAAK,MAAA,SAAS,EAAE,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,QAAd;AAAuB,MAAA,SAAS,EAAE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKT,KAAL,CAAWE,KAAtC,MADF,CADF,CAFH;AASD;;AA9BgC;;AAiCpC,eAAeL,KAAf","sourcesContent":["import React from 'react';\r\nimport { Textfit } from 'react-textfit';\r\n\r\nclass Scale extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n            this.state = {\r\n                scale : this.props.scale\r\n            };\r\n    }\r\n\r\n\r\n\r\ncomponentDidUpdate(prevProps) {\r\n\r\n    if(this.props.scale < 100000) {\r\n        this.setState({scale : this.props.scale})\r\n    }\r\n    else {\r\n        this.setState({scale : Number.parseFloat(this.props.scale).toExponential(1)})\r\n    }\r\n}\r\n\r\n render() {\r\n     return(\r\n\r\n        <div className={'scaleBackground draw'}>\r\n          <Textfit mode=\"single\" className={\"test\"}>\r\n            <text className={'scale'}>{this.props.scale}x</text>\r\n          </Textfit>\r\n        </div>\r\n\r\n      );\r\n   }\r\n}\r\n\r\nexport default Scale;"]},"metadata":{},"sourceType":"module"}
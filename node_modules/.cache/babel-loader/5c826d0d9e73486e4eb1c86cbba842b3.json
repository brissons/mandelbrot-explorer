{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scott\\\\IntelliJ\\\\MandelbrotApp\\\\src\\\\Fractal.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport IntroOverlay from \"./IntroOverlay.js\";\nimport Scale from \"./Scale.js\";\n\nvar bigdecimal = require(\"bigdecimal\");\n\nvar HALF_UP = bigdecimal.RoundingMode.HALF_UP();\n\nclass Fractal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      //zooms and focuses fractal on click\n      if (!this.state.loading) {\n        const canvas = this.refs.canvas;\n        let rect = canvas.getBoundingClientRect(); // abs. size of element\n\n        let realWidth = rect.width / rect.height < 4 / 3 ? new bigdecimal.BigDecimal(rect.height * 4 / 3) : new bigdecimal.BigDecimal(rect.width); //compensates for object-fit cover\n\n        let realHeight = rect.width / rect.height > 4 / 3 ? new bigdecimal.BigDecimal(rect.width * 3 / 4) : new bigdecimal.BigDecimal(rect.height);\n        let scaleX = new bigdecimal.BigDecimal(canvas.width).divide(realWidth, 100, HALF_UP);\n        let scaleY = new bigdecimal.BigDecimal(canvas.height).divide(realHeight, 100, HALF_UP);\n        let two = new bigdecimal.BigDecimal(2);\n        let newX = new bigdecimal.BigDecimal(e.clientX).subtract(new bigdecimal.BigDecimal(rect.width).divide(two)).add(realWidth.divide(two)).subtract(new bigdecimal.BigDecimal(rect.left)).multiply(scaleX);\n        let newY = new bigdecimal.BigDecimal(e.clientY).subtract(new bigdecimal.BigDecimal(rect.height).divide(two)).add(realHeight.divide(two)).subtract(new bigdecimal.BigDecimal(rect.top)).multiply(scaleY);\n        this.setState(prevState => {\n          return {\n            x: prevState.x.add(newX.subtract(new bigdecimal.BigDecimal(this.state.width).divide(two)).divide(this.state.scale, 100, HALF_UP)),\n            y: prevState.y.add(newY.subtract(new bigdecimal.BigDecimal(this.state.height).divide(two)).divide(this.state.scale, 100, HALF_UP)),\n            i: prevState.i += 5,\n            scale: prevState.scale.multiply(two),\n            loading: true\n          };\n        });\n        this.refs.scale.classList.remove(\"fadeOutStay\");\n        this.refs.scale.classList.add(\"visible\");\n      }\n    };\n\n    this.state = {\n      width: 1920,\n      height: 1440,\n      x: new bigdecimal.BigDecimal(960 - 50),\n      y: new bigdecimal.BigDecimal(720),\n      scale: new bigdecimal.BigDecimal(1),\n      i: 50,\n      intro: true,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    let canvas = this.refs.canvas;\n    let ctx = this.refs.canvas.getContext(\"2d\");\n    let ctxTwo = this.refs.canvasTwo.getContext(\"2d\");\n    let img = this.refs.image;\n\n    img.onload = () => {\n      canvas.classList.remove(\"visible\");\n      ctxTwo.drawImage(img, 0, 0);\n      canvas.classList.add(\"fadeOut\");\n      setTimeout(function () {\n        ctx.drawImage(img, 0, 0);\n        canvas.classList.remove(\"fadeOut\");\n        canvas.classList.add(\"visible\");\n      }, 500);\n      this.setState({\n        loading: false\n      });\n\n      if (!this.state.intro) {\n        this.refs.scale.classList.remove(\"visible\");\n        this.refs.scale.classList.add(\"fadeOutStay\");\n      }\n    };\n  }\n\n  removeIntro() {\n    if (!this.state.loading) {\n      this.setState({\n        intro: false\n      });\n    }\n  }\n\n  calculateScaleText() {\n    return this.state.scale.compareTo(new bigdecimal.BigDecimal(10000)) < 0 ? this.state.scale.longValue() : Number.parseFloat(this.state.scale.longValue()).toExponential(1);\n  }\n\n  render() {\n    var url = \"http://localhost:8080/mandelbrot?\" + \"width=\" + this.state.width + \"&height=\" + this.state.height + \"&x=\" + this.state.x + \"&y=\" + this.state.y + \"&scale=\" + this.state.scale + \"&i=\" + this.state.i;\n    console.log(url);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IntroOverlay, {\n      intro: this.state.intro,\n      loaded: !this.state.loading,\n      onClick: this.removeIntro.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"scale\",\n      className: \"centerContainer overlay\",\n      style: {\n        zIndex: 3,\n        opacity: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Scale, {\n      scale: this.calculateScaleText(),\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"center\",\n      style: {\n        zIndex: \"1\"\n      },\n      width: this.state.width,\n      height: this.state.height,\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvasTwo\",\n      className: \"center\",\n      width: this.state.width,\n      height: this.state.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      ref: \"image\",\n      src: url,\n      alt: \"new\",\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }), \";\");\n  }\n\n}\n\nexport default Fractal;","map":{"version":3,"sources":["C:/Users/scott/IntelliJ/MandelbrotApp/src/Fractal.js"],"names":["React","IntroOverlay","Scale","bigdecimal","require","HALF_UP","RoundingMode","Fractal","Component","constructor","props","handleClick","e","state","loading","canvas","refs","rect","getBoundingClientRect","realWidth","width","height","BigDecimal","realHeight","scaleX","divide","scaleY","two","newX","clientX","subtract","add","left","multiply","newY","clientY","top","setState","prevState","x","scale","y","i","classList","remove","intro","componentDidMount","ctx","getContext","ctxTwo","canvasTwo","img","image","onload","drawImage","setTimeout","removeIntro","calculateScaleText","compareTo","longValue","Number","parseFloat","toExponential","render","url","console","log","bind","zIndex","opacity","display"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\nimport IntroOverlay from \"./IntroOverlay.js\";\r\nimport Scale from \"./Scale.js\";\r\n\r\nvar bigdecimal = require(\"bigdecimal\");\r\nvar HALF_UP = bigdecimal.RoundingMode.HALF_UP();\r\n\r\nclass Fractal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 1920,\r\n      height: 1440,\r\n      x: new bigdecimal.BigDecimal(960 - 50),\r\n      y: new bigdecimal.BigDecimal(720),\r\n      scale: new bigdecimal.BigDecimal(1),\r\n      i: 50,\r\n      intro: true,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    //zooms and focuses fractal on click\r\n    if (!this.state.loading) {\r\n      const canvas = this.refs.canvas;\r\n      let rect = canvas.getBoundingClientRect(); // abs. size of element\r\n      let realWidth =\r\n        rect.width / rect.height < 4 / 3\r\n          ? new bigdecimal.BigDecimal((rect.height * 4) / 3)\r\n          : new bigdecimal.BigDecimal(rect.width); //compensates for object-fit cover\r\n      let realHeight =\r\n        rect.width / rect.height > 4 / 3\r\n          ? new bigdecimal.BigDecimal((rect.width * 3) / 4)\r\n          : new bigdecimal.BigDecimal(rect.height);\r\n      let scaleX = new bigdecimal.BigDecimal(canvas.width).divide(\r\n        realWidth,\r\n        100,\r\n        HALF_UP\r\n      );\r\n      let scaleY = new bigdecimal.BigDecimal(canvas.height).divide(\r\n        realHeight,\r\n        100,\r\n        HALF_UP\r\n      );\r\n      let two = new bigdecimal.BigDecimal(2);\r\n      let newX = new bigdecimal.BigDecimal(e.clientX)\r\n        .subtract(new bigdecimal.BigDecimal(rect.width).divide(two))\r\n        .add(realWidth.divide(two))\r\n        .subtract(new bigdecimal.BigDecimal(rect.left))\r\n        .multiply(scaleX);\r\n      let newY = new bigdecimal.BigDecimal(e.clientY)\r\n        .subtract(new bigdecimal.BigDecimal(rect.height).divide(two))\r\n        .add(realHeight.divide(two))\r\n        .subtract(new bigdecimal.BigDecimal(rect.top))\r\n        .multiply(scaleY);\r\n\r\n      this.setState((prevState) => {\r\n        return {\r\n          x: prevState.x.add(\r\n            newX\r\n              .subtract(new bigdecimal.BigDecimal(this.state.width).divide(two))\r\n              .divide(this.state.scale, 100, HALF_UP)\r\n          ),\r\n          y: prevState.y.add(\r\n            newY\r\n              .subtract(\r\n                new bigdecimal.BigDecimal(this.state.height).divide(two)\r\n              )\r\n              .divide(this.state.scale, 100, HALF_UP)\r\n          ),\r\n          i: (prevState.i += 5),\r\n          scale: prevState.scale.multiply(two),\r\n          loading: true,\r\n        };\r\n      });\r\n\r\n      this.refs.scale.classList.remove(\"fadeOutStay\");\r\n      this.refs.scale.classList.add(\"visible\");\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let canvas = this.refs.canvas;\r\n    let ctx = this.refs.canvas.getContext(\"2d\");\r\n    let ctxTwo = this.refs.canvasTwo.getContext(\"2d\");\r\n    let img = this.refs.image;\r\n\r\n    img.onload = () => {\r\n      canvas.classList.remove(\"visible\");\r\n      ctxTwo.drawImage(img, 0, 0);\r\n      canvas.classList.add(\"fadeOut\");\r\n      setTimeout(function () {\r\n        ctx.drawImage(img, 0, 0);\r\n        canvas.classList.remove(\"fadeOut\");\r\n        canvas.classList.add(\"visible\");\r\n      }, 500);\r\n      this.setState({ loading: false });\r\n\r\n      if (!this.state.intro) {\r\n        this.refs.scale.classList.remove(\"visible\");\r\n        this.refs.scale.classList.add(\"fadeOutStay\");\r\n      }\r\n    };\r\n  }\r\n\r\n  removeIntro() {\r\n    if (!this.state.loading) {\r\n      this.setState({ intro: false });\r\n    }\r\n  }\r\n\r\n  calculateScaleText() {\r\n    return this.state.scale.compareTo(new bigdecimal.BigDecimal(10000)) < 0\r\n      ? this.state.scale.longValue()\r\n      : Number.parseFloat(this.state.scale.longValue()).toExponential(1);\r\n  }\r\n\r\n  render() {\r\n    var url =\r\n      \"http://localhost:8080/mandelbrot?\" +\r\n      \"width=\" +\r\n      this.state.width +\r\n      \"&height=\" +\r\n      this.state.height +\r\n      \"&x=\" +\r\n      this.state.x +\r\n      \"&y=\" +\r\n      this.state.y +\r\n      \"&scale=\" +\r\n      this.state.scale +\r\n      \"&i=\" +\r\n      this.state.i;\r\n\r\n    console.log(url);\r\n    return (\r\n      <React.Fragment>\r\n        <IntroOverlay\r\n          intro={this.state.intro}\r\n          loaded={!this.state.loading}\r\n          onClick={this.removeIntro.bind(this)}\r\n        />\r\n        <div\r\n          ref=\"scale\"\r\n          className={\"centerContainer overlay\"}\r\n          style={{ zIndex: 3, opacity: 0 }}\r\n        >\r\n          <Scale scale={this.calculateScaleText()} className={\"center\"} />\r\n        </div>\r\n        <canvas\r\n          ref=\"canvas\"\r\n          className=\"center\"\r\n          style={{ zIndex: \"1\" }}\r\n          width={this.state.width}\r\n          height={this.state.height}\r\n          onClick={this.handleClick.bind(this)}\r\n        />\r\n        <canvas\r\n          ref=\"canvasTwo\"\r\n          className=\"center\"\r\n          width={this.state.width}\r\n          height={this.state.height}\r\n        />\r\n        <img ref=\"image\" src={url} alt=\"new\" style={{ display: \"none\" }} />;\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fractal;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scott\\\\IntelliJ\\\\MandelbrotApp\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './styles.css';\n\nclass Image extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      e.persist();\n      var eventLocation = getEventLocation(this, e);\n      var context = this.getContext('2d');\n      var pixelData = context.getImageData(eventLocation.x, eventLocation.y, 1, 1).data;\n      const canvas = this.refs.canvas;\n      this.setState(prevState => {\n        console.log(e.screenX);\n        return {\n          x: e.screenX,\n          y: e.screenY,\n          scale: prevState.scale\n        };\n      });\n      console.log(this.state.x);\n      this.forceUpdate();\n    };\n\n    this.state = {\n      x: 800,\n      y: 600,\n      scale: 1\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    const img = this.refs.image;\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n    };\n  }\n\n  getMousePosition(canvas, event) {\n    let rect = canvas.getBoundingClientRect();\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n    console.log(\"Coordinate x: \" + x, \"Coordinate y: \" + y);\n  }\n\n  render() {\n    var url = \"http://localhost:8080/mandelbrot?translateX=\" + this.state.x + \"&translateY=\" + this.state.y + \"&scale=\" + this.state.scale;\n    console.log(url);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centerContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"center\",\n      width: 1600,\n      height: 1200,\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"center\",\n      ref: \"image\",\n      src: url,\n      alt: \"new\",\n      display: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(Image, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 18\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/scott/IntelliJ/MandelbrotApp/src/index.js"],"names":["React","ReactDOM","Image","Component","constructor","props","handleClick","e","persist","eventLocation","getEventLocation","context","getContext","pixelData","getImageData","x","y","data","canvas","refs","setState","prevState","console","log","screenX","screenY","scale","state","forceUpdate","componentDidMount","ctx","img","image","onload","drawImage","getMousePosition","event","rect","getBoundingClientRect","clientX","left","clientY","top","render","url","bind","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './styles.css'\n\nclass Image extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: 800,\n            y: 600,\n            scale: 1\n        };\n    }\n\n    handleClick = e => {\n        e.persist();\n\n    var eventLocation = getEventLocation(this, e);\n    var context = this.getContext('2d');\n    var pixelData = context.getImageData(eventLocation.x, eventLocation.y, 1, 1).data;\n\n        const canvas = this.refs.canvas;\n\n        this.setState(prevState => {\n        console.log(e.screenX);\n           return {\n           x: e.screenX,\n           y: e.screenY,\n           scale: prevState.scale}})\n            console.log(this.state.x);\n           this.forceUpdate();\n    }\n\n\n\n    componentDidMount() {\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n        const img = this.refs.image\n\n        img.onload = () => {\n              ctx.drawImage(img, 0, 0)\n          }\n      }\n\n\n       getMousePosition(canvas, event) {\n                  let rect = canvas.getBoundingClientRect();\n                  let x = event.clientX - rect.left;\n                  let y = event.clientY - rect.top;\n                  console.log(\"Coordinate x: \" + x,\n                              \"Coordinate y: \" + y);\n              }\n\n    render() {\n        var url = \"http://localhost:8080/mandelbrot?translateX=\" + this.state.x + \"&translateY=\" + this.state.y + \"&scale=\" + this.state.scale;\n        console.log(url);\n\n        return <div className=\"centerContainer\">\n                    <canvas ref=\"canvas\" className=\"center\" width={1600} height={1200} onClick={this.handleClick.bind(this)}/>\n                    <img className=\"center\" ref=\"image\" src={url} alt=\"new\" display=\"none\" />\n                </div>\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( <Image />,  rootElement);"]},"metadata":{},"sourceType":"module"}
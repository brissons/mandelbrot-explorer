{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scott\\\\IntelliJ\\\\MandelbrotApp\\\\src\\\\Fractal.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport IntroOverlay from \"./IntroOverlay.js\";\nimport Scale from \"./Scale.js\";\nimport { ImpulseSpinner } from \"react-spinners-kit\";\n\nclass Fractal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      if (!this.state.loading) {\n        const canvas = this.refs.canvas;\n        let rect = canvas.getBoundingClientRect();\n        let realWidth = rect.width / rect.height < 4 / 3 ? rect.height * 4 / 3 : rect.width;\n        let realHeight = rect.width / rect.height > 4 / 3 ? rect.width * 3 / 4 : rect.height;\n        let scaleX = canvas.width / realWidth;\n        let scaleY = canvas.height / realHeight;\n        let newX = (e.clientX - rect.width / 2 + realWidth / 2 - rect.left) * scaleX;\n        let newY = (e.clientY - rect.height / 2 + realHeight / 2 - rect.top) * scaleY;\n        this.setState(prevState => {\n          return {\n            x: prevState.x + (newX - this.state.width / 2) / this.state.scale,\n            y: prevState.y + (newY - this.state.height / 2) / this.state.scale,\n            i: prevState.i += 10,\n            scale: prevState.scale *= 2,\n            loading: true\n          };\n        });\n        this.refs.scale.classList.remove(\"fadeOutStay\");\n        this.refs.scale.classList.add(\"visible\");\n      }\n    };\n\n    this.state = {\n      width: 1920,\n      height: 1440,\n      x: 960 - 50,\n      y: 720,\n      scale: 1,\n      i: 50,\n      intro: true,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    let canvas = this.refs.canvas;\n    let ctx = this.refs.canvas.getContext(\"2d\");\n    let ctxTwo = this.refs.canvasTwo.getContext(\"2d\");\n    let img = this.refs.image;\n\n    img.onload = () => {\n      canvas.classList.remove(\"visible\");\n      ctxTwo.drawImage(img, 0, 0);\n      canvas.classList.add(\"fadeOut\");\n      setTimeout(function () {\n        ctx.drawImage(img, 0, 0);\n        canvas.classList.remove(\"fadeOut\");\n        canvas.classList.add(\"visible\");\n      }, 500);\n      this.setState({\n        loading: false\n      });\n\n      if (!this.state.intro) {\n        this.refs.scale.classList.remove(\"visible\");\n        this.refs.scale.classList.add(\"fadeOutStay\");\n      }\n    };\n  }\n\n  removeIntro() {\n    if (!this.state.loading) {\n      this.setState({\n        intro: false\n      });\n    }\n  }\n\n  calculateScaleText() {\n    return this.state.scale < 10000 ? this.state.scale : Number.parseFloat(this.state.scale).toExponential(1);\n  }\n\n  render() {\n    var url = \"http://localhost:8080/mandelbrot?\" + \"width=\" + this.state.width + \"&height=\" + this.state.height + \"&x=\" + this.state.x + \"&y=\" + this.state.y + \"&scale=\" + this.state.scale + \"&i=\" + this.state.i;\n    console.log(url);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IntroOverlay, {\n      intro: this.state.intro,\n      loaded: !this.state.loading,\n      onClick: this.removeIntro.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"scale\",\n      className: \"centerContainer overlay\",\n      style: {\n        zIndex: 3,\n        opacity: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Scale, {\n      scale: this.calculateScaleText(),\n      loading: this.state.loading,\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.loading ? \"scaleSpinner center spinnerFadeIn\" : \"scaleSpinner center\",\n      style: {\n        opacity: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ImpulseSpinner, {\n      size: 50,\n      frontColor: \"#686769\",\n      loading: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"center\",\n      style: {\n        zIndex: \"1\"\n      },\n      width: this.state.width,\n      height: this.state.height,\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvasTwo\",\n      className: \"center\",\n      width: this.state.width,\n      height: this.state.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      ref: \"image\",\n      src: url,\n      alt: \"new\",\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }), \" ;\");\n  }\n\n}\n\nexport default Fractal;","map":{"version":3,"sources":["C:/Users/scott/IntelliJ/MandelbrotApp/src/Fractal.js"],"names":["React","IntroOverlay","Scale","ImpulseSpinner","Fractal","Component","constructor","props","handleClick","e","state","loading","canvas","refs","rect","getBoundingClientRect","realWidth","width","height","realHeight","scaleX","scaleY","newX","clientX","left","newY","clientY","top","setState","prevState","x","scale","y","i","classList","remove","add","intro","componentDidMount","ctx","getContext","ctxTwo","canvasTwo","img","image","onload","drawImage","setTimeout","removeIntro","calculateScaleText","Number","parseFloat","toExponential","render","url","console","log","bind","zIndex","opacity","display"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\nimport IntroOverlay from \"./IntroOverlay.js\";\r\nimport Scale from \"./Scale.js\";\r\nimport { ImpulseSpinner } from \"react-spinners-kit\";\r\n\r\nclass Fractal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 1920,\r\n      height: 1440,\r\n      x: 960 - 50,\r\n      y: 720,\r\n      scale: 1,\r\n      i: 50,\r\n      intro: true,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    if (!this.state.loading) {\r\n      const canvas = this.refs.canvas;\r\n      let rect = canvas.getBoundingClientRect();\r\n      let realWidth =\r\n        rect.width / rect.height < 4 / 3 ? (rect.height * 4) / 3 : rect.width;\r\n      let realHeight =\r\n        rect.width / rect.height > 4 / 3 ? (rect.width * 3) / 4 : rect.height;\r\n      let scaleX = canvas.width / realWidth;\r\n      let scaleY = canvas.height / realHeight;\r\n      let newX =\r\n        (e.clientX - rect.width / 2 + realWidth / 2 - rect.left) * scaleX;\r\n      let newY =\r\n        (e.clientY - rect.height / 2 + realHeight / 2 - rect.top) * scaleY;\r\n      this.setState((prevState) => {\r\n        return {\r\n          x: prevState.x + (newX - this.state.width / 2) / this.state.scale,\r\n          y: prevState.y + (newY - this.state.height / 2) / this.state.scale,\r\n          i: (prevState.i += 10),\r\n          scale: (prevState.scale *= 2),\r\n          loading: true,\r\n        };\r\n      });\r\n      this.refs.scale.classList.remove(\"fadeOutStay\");\r\n      this.refs.scale.classList.add(\"visible\");\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let canvas = this.refs.canvas;\r\n    let ctx = this.refs.canvas.getContext(\"2d\");\r\n    let ctxTwo = this.refs.canvasTwo.getContext(\"2d\");\r\n    let img = this.refs.image;\r\n    img.onload = () => {\r\n      canvas.classList.remove(\"visible\");\r\n      ctxTwo.drawImage(img, 0, 0);\r\n      canvas.classList.add(\"fadeOut\");\r\n      setTimeout(function () {\r\n        ctx.drawImage(img, 0, 0);\r\n        canvas.classList.remove(\"fadeOut\");\r\n        canvas.classList.add(\"visible\");\r\n      }, 500);\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      if (!this.state.intro) {\r\n        this.refs.scale.classList.remove(\"visible\");\r\n        this.refs.scale.classList.add(\"fadeOutStay\");\r\n      }\r\n    };\r\n  }\r\n\r\n  removeIntro() {\r\n    if (!this.state.loading) {\r\n      this.setState({\r\n        intro: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateScaleText() {\r\n    return this.state.scale < 10000\r\n      ? this.state.scale\r\n      : Number.parseFloat(this.state.scale).toExponential(1);\r\n  }\r\n\r\n  render() {\r\n    var url =\r\n      \"http://localhost:8080/mandelbrot?\" +\r\n      \"width=\" + this.state.width +\r\n      \"&height=\" + this.state.height +\r\n      \"&x=\" + this.state.x +\r\n      \"&y=\" + this.state.y +\r\n      \"&scale=\" + this.state.scale +\r\n      \"&i=\" + this.state.i;\r\n\r\n    console.log(url);\r\n    return (\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <IntroOverlay\r\n          intro={this.state.intro}\r\n          loaded={!this.state.loading}\r\n          onClick={this.removeIntro.bind(this)}\r\n        />\r\n        <div\r\n          ref=\"scale\"\r\n          className={\"centerContainer overlay\"}\r\n          style={{ zIndex: 3, opacity: 0 }}\r\n        >\r\n          <Scale scale={this.calculateScaleText()} loading={this.state.loading} className={\"center\"} />{\" \"}\r\n                  <div className={this.state.loading ? \"scaleSpinner center spinnerFadeIn\" : \"scaleSpinner center\"} style={{opacity:0}}>\r\n                    <ImpulseSpinner size={50} frontColor=\"#686769\" loading={true} />\r\n                  </div>\r\n        </div>\r\n        <canvas\r\n          ref=\"canvas\"\r\n          className=\"center\"\r\n          style={{ zIndex: \"1\" }}\r\n          width={this.state.width}\r\n          height={this.state.height}\r\n          onClick={this.handleClick.bind(this)}\r\n        />{\" \"}\r\n        <canvas\r\n          ref=\"canvasTwo\"\r\n          className=\"center\"\r\n          width={this.state.width}\r\n          height={this.state.height}\r\n        />\r\n        <img ref=\"image\" src={url} alt=\"new\" style={{ display: \"none\" }} /> ;\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fractal;"]},"metadata":{},"sourceType":"module"}
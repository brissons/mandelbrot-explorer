{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scott\\\\IntelliJ\\\\MandelbrotApp\\\\src\\\\Fractal.js\";\nimport React from 'react';\nimport './styles.css';\nimport Overlay from \"./Overlay.js\";\nimport Scale from \"./Scale.js\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { FlagSpinner } from \"react-spinners-kit\";\n\nvar bigdecimal = require(\"bigdecimal\");\n\nvar HALF_UP = bigdecimal.RoundingMode.HALF_UP();\n\nclass Fractal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      //zooms and focuses fractal on click\n      const canvas = this.refs.canvas;\n      let rect = canvas.getBoundingClientRect(); // abs. size of element\n\n      let ratio = canvas.width / canvas.height;\n      let realWidth = rect.width / rect.height < ratio ? rect.height * 4 / 3 : rect.width; //compensates for object-fit cover\n\n      let realHeight = rect.width / rect.height > ratio ? rect.width * 3 / 4 : rect.height;\n      let scaleX = canvas.width / realWidth;\n      let scaleY = canvas.height / realHeight;\n      let newX = (e.clientX - rect.width / 2 + realWidth / 2 - rect.left) * scaleX;\n      let newY = (e.clientY - rect.height / 2 + realHeight / 2 - rect.top) * scaleY; //need to convert this\n\n      this.setState(prevState => {\n        return {\n          x: prevState.x + (newX - this.state.width / 2.0) / this.state.scale,\n          y: prevState.y + (newY - this.state.height / 2.0) / this.state.scale,\n          i: prevState.i += 10,\n          scale: prevState.scale * 2,\n          intro: false\n        };\n      });\n    };\n\n    this.state = {\n      width: 1920,\n      //the width of the fractal\n      height: 1440,\n      //the height of the fractal\n      x: new bigdecimal.BigDecimal(960 - 25),\n      y: new bigdecimal.BigDecimal(720),\n      i: 180,\n      //initial number of iterations\n      scale: 1,\n      //initial scale\n      intro: true,\n      loading: true,\n      loaded: false\n    };\n  }\n\n  imageLoaded() {\n    this.setState({\n      loaded: true,\n      loading: false\n    });\n  }\n\n  componentDidMount() {\n    //loads image to canvas to map bitmap to image for handleClick()\n    let canvas = this.refs.canvas;\n    let ctx = canvas.getContext(\"2d\");\n    let ctxTwo = this.refs.canvasTwo.getContext(\"2d\");\n    let img = this.refs.image;\n\n    img.onload = () => {\n      canvas.classList.remove(\"visible\");\n      ctxTwo.drawImage(img, 0, 0);\n      canvas.classList.add(\"fadeOut\");\n      setTimeout(function () {\n        ctx.drawImage(img, 0, 0);\n        canvas.classList.remove(\"fadeOut\");\n        canvas.classList.add(\"visible\");\n      }, 500);\n    };\n  } //    removeFade() {\n  //        let scale = this.refs.scale;\n  //        scale.classList.remove('scaleAnimation');\n  //        console.log(\"hit!\");\n  //    }\n\n\n  render() {\n    var url = \"http://localhost:8080/mandelbrot?\" + \"width=\" + this.state.width + \"&height=\" + this.state.height + \"&x=\" + this.state.x + \"&y=\" + this.state.y + \"&scale=\" + this.state.scale + \"&i=\" + this.state.i;\n    console.log(url);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"center\",\n      style: {\n        display: 'block',\n        zIndex: \"1\"\n      },\n      width: this.state.width,\n      height: this.state.height,\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvasTwo\",\n      className: \"center\",\n      style: {\n        display: 'block'\n      },\n      width: this.state.width,\n      height: this.state.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      onLoad: this.imageLoaded.bind(this),\n      className: \"center\",\n      ref: \"image\",\n      src: url,\n      alt: \"new\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), \";\");\n  }\n\n}\n\nexport default Fractal;","map":{"version":3,"sources":["C:/Users/scott/IntelliJ/MandelbrotApp/src/Fractal.js"],"names":["React","Overlay","Scale","LoadingOverlay","FlagSpinner","bigdecimal","require","HALF_UP","RoundingMode","Fractal","Component","constructor","props","handleClick","e","canvas","refs","rect","getBoundingClientRect","ratio","width","height","realWidth","realHeight","scaleX","scaleY","newX","clientX","left","newY","clientY","top","setState","prevState","x","state","scale","y","i","intro","BigDecimal","loading","loaded","imageLoaded","componentDidMount","ctx","getContext","ctxTwo","canvasTwo","img","image","onload","classList","remove","drawImage","add","setTimeout","render","url","console","log","display","zIndex","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './styles.css'\r\nimport Overlay from \"./Overlay.js\"\r\nimport Scale from \"./Scale.js\"\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { FlagSpinner } from \"react-spinners-kit\";\r\n\r\nvar bigdecimal = require(\"bigdecimal\");\r\nvar HALF_UP = bigdecimal.RoundingMode.HALF_UP();\r\n\r\nclass Fractal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            width: 1920,        //the width of the fractal\r\n            height: 1440,        //the height of the fractal\r\n            x: new bigdecimal.BigDecimal(960 - 25),\r\n            y: new bigdecimal.BigDecimal(720),\r\n            i: 180,              //initial number of iterations\r\n            scale: 1,            //initial scale\r\n            intro: true,\r\n            loading: true,\r\n            loaded: false\r\n        };\r\n    }\r\n\r\n    handleClick = e => {                                //zooms and focuses fractal on click\r\n        const canvas = this.refs.canvas;\r\n        let rect = canvas.getBoundingClientRect();      // abs. size of element\r\n        let ratio = canvas.width/canvas.height;\r\n        let realWidth = (rect.width/rect.height < ratio) ? (rect.height*4)/3 : rect.width;    //compensates for object-fit cover\r\n        let realHeight = (rect.width/rect.height > ratio) ? (rect.width*3)/4 : rect.height;\r\n        let scaleX = canvas.width / realWidth;\r\n        let scaleY = canvas.height / realHeight;\r\n        let newX = (e.clientX - rect.width/2 + realWidth/2 - rect.left) * scaleX;\r\n        let newY = (e.clientY - rect.height/2 + realHeight/2 - rect.top) * scaleY;\r\n\r\n\r\n//need to convert this\r\n        this.setState(prevState => {\r\n           return {\r\n            x: prevState.x + (newX - (this.state.width/2.0))/this.state.scale,\r\n            y: prevState.y + (newY - (this.state.height/2.0))/this.state.scale,\r\n           i: prevState.i+=10,\r\n           scale: prevState.scale*2,\r\n           intro: false}\r\n        })\r\n\r\n    }\r\n\r\n    imageLoaded(){\r\n\r\n                this.setState({loaded:true,\r\n                loading: false\r\n                })\r\n    }\r\n\r\n    componentDidMount() {                               //loads image to canvas to map bitmap to image for handleClick()\r\n        let canvas = this.refs.canvas\r\n        let ctx = canvas.getContext(\"2d\")\r\n        let ctxTwo = this.refs.canvasTwo.getContext(\"2d\")\r\n        let img = this.refs.image\r\n\r\n        img.onload = () => {\r\n            canvas.classList.remove(\"visible\");\r\n            ctxTwo.drawImage(img, 0, 0);\r\n            canvas.classList.add(\"fadeOut\");\r\n\r\n            setTimeout(function(){\r\n                ctx.drawImage(img, 0, 0);\r\n                canvas.classList.remove(\"fadeOut\");\r\n                canvas.classList.add(\"visible\");\r\n            }, 500);\r\n          }\r\n      }\r\n\r\n//    removeFade() {\r\n//        let scale = this.refs.scale;\r\n//        scale.classList.remove('scaleAnimation');\r\n//        console.log(\"hit!\");\r\n//    }\r\n\r\n    render() {\r\n        var url = \"http://localhost:8080/mandelbrot?\" +\r\n                        \"width=\" + this.state.width +\r\n                        \"&height=\" + this.state.height +\r\n                        \"&x=\" + this.state.x +\r\n                        \"&y=\" + this.state.y +\r\n                        \"&scale=\" + this.state.scale +\r\n                        \"&i=\" + this.state.i;\r\n\r\n    console.log(url);\r\n        return(\r\n\r\n    <React.Fragment>\r\n            <canvas ref=\"canvas\" className=\"center\" style={{display: 'block', zIndex: \"1\"}} width={this.state.width} height={this.state.height} onClick={this.handleClick.bind(this)}/>\r\n            <canvas ref=\"canvasTwo\" className=\"center\" style={{display: 'block'}} width={this.state.width} height={this.state.height}/>\r\n            <img onLoad={this.imageLoaded.bind(this)} className=\"center\" ref=\"image\" src={url} alt=\"new\" style={{display: 'none'}} />;\r\n\r\n    </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fractal;"]},"metadata":{},"sourceType":"module"}
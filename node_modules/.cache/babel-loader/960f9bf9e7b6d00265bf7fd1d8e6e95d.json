{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scott\\\\IntelliJ\\\\MandelbrotApp\\\\src\\\\Fractal.js\";\nimport React from 'react';\nimport './styles.css';\nimport Overlay from \"./Overlay.js\";\nimport Scale from \"./Scale.js\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { FlagSpinner } from \"react-spinners-kit\";\nimport Placeholder from \"./placeHolder.png\";\nimport Click from \"./Click.js\";\nimport Menu from \"./Menu.js\";\n\nvar Blur = require('react-blur').default;\n\nvar bigdecimal = require(\"bigdecimal\");\n\nvar HALF_UP = bigdecimal.RoundingMode.HALF_UP();\n\nclass Fractal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      //zooms and focuses fractal on click\n      if (!this.state.loading) {\n        const canvas = this.refs.canvas;\n        let rect = canvas.getBoundingClientRect(); // abs. size of element\n\n        let realWidth = rect.width / rect.height < 4 / 3 ? new bigdecimal.BigDecimal(rect.height * 4 / 3) : new bigdecimal.BigDecimal(rect.width); //compensates for object-fit cover\n\n        let realHeight = rect.width / rect.height > 4 / 3 ? new bigdecimal.BigDecimal(rect.width * 3 / 4) : new bigdecimal.BigDecimal(rect.height);\n        let scaleX = new bigdecimal.BigDecimal(canvas.width).divide(realWidth, 25, HALF_UP);\n        let scaleY = new bigdecimal.BigDecimal(canvas.height).divide(realHeight, 25, HALF_UP);\n        let two = new bigdecimal.BigDecimal(2);\n        let newX = new bigdecimal.BigDecimal(e.clientX).subtract(new bigdecimal.BigDecimal(rect.width).divide(two)).add(realWidth.divide(two)).subtract(new bigdecimal.BigDecimal(rect.left)).multiply(scaleX);\n        let newY = new bigdecimal.BigDecimal(e.clientY).subtract(new bigdecimal.BigDecimal(rect.height).divide(two)).add(realHeight.divide(two)).subtract(new bigdecimal.BigDecimal(rect.top)).multiply(scaleY);\n        this.setState(prevState => {\n          return {\n            x: prevState.x.add(newX.subtract(new bigdecimal.BigDecimal(this.state.width).divide(two)).divide(new bigdecimal.BigDecimal(this.state.scale), 25, HALF_UP)),\n            y: prevState.y.add(newY.subtract(new bigdecimal.BigDecimal(this.state.height).divide(two)).divide(new bigdecimal.BigDecimal(this.state.scale), 25, HALF_UP)),\n            i: prevState.i += 10,\n            scale: prevState.scale * 2,\n            intro: false,\n            loading: true\n          };\n        });\n\n        if (this.state.scale * 2 < 100000) {\n          this.setState({\n            scaleText: this.state.scale * 2\n          });\n        } else {\n          this.setState({\n            scaleText: Number.parseFloat(this.state.scale * 2).toExponential(1)\n          });\n        }\n\n        this.refs.scale.classList.remove(\"fadeOutStay\");\n        this.refs.scale.classList.add(\"visible\");\n      }\n    };\n\n    this.state = {\n      width: 1920,\n      //the width of the fractal\n      height: 1440,\n      //the height of the fractal\n      x: new bigdecimal.BigDecimal(960 - 50),\n      y: new bigdecimal.BigDecimal(720),\n      i: 50,\n      //initial number of iterations\n      scale: 1,\n      //initial scale\n      scaleText: 1,\n      intro: true,\n      loading: true,\n      loaded: false\n    };\n  }\n\n  imageLoaded() {\n    this.setState({\n      loaded: true,\n      loading: false\n    });\n  }\n\n  componentDidMount() {\n    //loads image to canvas to map bitmap to image for handleClick()\n    let canvas = this.refs.canvas;\n    let ctx = canvas.getContext(\"2d\");\n    let ctxTwo = this.refs.canvasTwo.getContext(\"2d\");\n    let img = this.refs.image;\n\n    img.onload = () => {\n      canvas.classList.remove(\"visible\");\n      ctxTwo.drawImage(img, 0, 0);\n      canvas.classList.add(\"fadeOut\");\n      setTimeout(function () {\n        ctx.drawImage(img, 0, 0);\n        canvas.classList.remove(\"fadeOut\");\n        canvas.classList.add(\"visible\");\n      }, 500);\n      this.setState({\n        loading: false\n      });\n\n      if (!this.state.intro) {\n        this.refs.scale.classList.remove(\"visible\");\n        this.refs.scale.classList.add(\"fadeOutStay\");\n      }\n    };\n  }\n\n  removeIntro() {\n    this.setState({\n      intro: false\n    });\n  }\n\n  render() {\n    var url = \"http://localhost:8080/mandelbrot?\" + \"width=\" + this.state.width + \"&height=\" + this.state.height + \"&x=\" + this.state.x + \"&y=\" + this.state.y + \"&scale=\" + this.state.scale + \"&i=\" + this.state.i;\n    console.log(url);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"menu\",\n      className: \"centerContainer\",\n      style: {\n        zIndex: 5,\n        opacity: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 18\n      }\n    })), /*#__PURE__*/React.createElement(Blur, {\n      ref: \"intro\",\n      img: Placeholder,\n      className: this.state.intro ? \"centerContainer\" : \"centerContainer overlay fadeOut\",\n      blurRadius: 25,\n      style: {\n        zIndex: 3\n      },\n      onClick: this.removeIntro.bind(this),\n      enableStyles: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"scale\",\n      className: \"centerContainer overlay\",\n      style: {\n        zIndex: 3,\n        opacity: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Scale, {\n      scale: this.state.scaleText,\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      className: \"center\",\n      style: {\n        display: 'block',\n        zIndex: \"1\"\n      },\n      width: this.state.width,\n      height: this.state.height,\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvasTwo\",\n      className: \"center\",\n      style: {\n        display: 'block'\n      },\n      width: this.state.width,\n      height: this.state.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      onLoad: this.imageLoaded.bind(this),\n      className: \"center\",\n      ref: \"image\",\n      src: url,\n      alt: \"new\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }), \";\");\n  }\n\n}\n\nexport default Fractal;","map":{"version":3,"sources":["C:/Users/scott/IntelliJ/MandelbrotApp/src/Fractal.js"],"names":["React","Overlay","Scale","LoadingOverlay","FlagSpinner","Placeholder","Click","Menu","Blur","require","default","bigdecimal","HALF_UP","RoundingMode","Fractal","Component","constructor","props","handleClick","e","state","loading","canvas","refs","rect","getBoundingClientRect","realWidth","width","height","BigDecimal","realHeight","scaleX","divide","scaleY","two","newX","clientX","subtract","add","left","multiply","newY","clientY","top","setState","prevState","x","scale","y","i","intro","scaleText","Number","parseFloat","toExponential","classList","remove","loaded","imageLoaded","componentDidMount","ctx","getContext","ctxTwo","canvasTwo","img","image","onload","drawImage","setTimeout","removeIntro","render","url","console","log","zIndex","opacity","bind","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './styles.css'\r\nimport Overlay from \"./Overlay.js\"\r\nimport Scale from \"./Scale.js\"\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { FlagSpinner } from \"react-spinners-kit\";\r\nimport Placeholder from \"./placeHolder.png\";\r\nimport Click from \"./Click.js\"\r\nimport Menu from \"./Menu.js\"\r\n\r\nvar Blur = require('react-blur').default;\r\nvar bigdecimal = require(\"bigdecimal\");\r\nvar HALF_UP = bigdecimal.RoundingMode.HALF_UP();\r\n\r\nclass Fractal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            width: 1920,        //the width of the fractal\r\n            height: 1440,        //the height of the fractal\r\n            x: new bigdecimal.BigDecimal(960-50),\r\n            y: new bigdecimal.BigDecimal(720),\r\n            i: 50,              //initial number of iterations\r\n            scale: 1,            //initial scale\r\n            scaleText: 1,\r\n            intro: true,\r\n            loading: true,\r\n            loaded: false\r\n        };\r\n    }\r\n\r\n    handleClick = e => {                                //zooms and focuses fractal on click\r\n        if(!this.state.loading) {\r\n            const canvas = this.refs.canvas;\r\n            let rect = canvas.getBoundingClientRect();      // abs. size of element\r\n            let realWidth = (rect.width/rect.height < 4/3) ? new bigdecimal.BigDecimal((rect.height*4)/3) : new bigdecimal.BigDecimal(rect.width);    //compensates for object-fit cover\r\n            let realHeight = (rect.width/rect.height > 4/3) ? new bigdecimal.BigDecimal((rect.width*3)/4) : new bigdecimal.BigDecimal(rect.height);\r\n            let scaleX = (new bigdecimal.BigDecimal(canvas.width)).divide(realWidth, 25, HALF_UP);\r\n            let scaleY = (new bigdecimal.BigDecimal(canvas.height)).divide(realHeight, 25, HALF_UP);\r\n            let two = new bigdecimal.BigDecimal(2);\r\n\r\n            let newX = (new bigdecimal.BigDecimal(e.clientX).subtract(new bigdecimal.BigDecimal(rect.width).divide(two))\r\n                        .add(realWidth.divide(two)).subtract(new bigdecimal.BigDecimal(rect.left))).multiply(scaleX);\r\n            let newY = (new bigdecimal.BigDecimal(e.clientY).subtract(new bigdecimal.BigDecimal(rect.height).divide(two))\r\n                        .add(realHeight.divide(two)).subtract(new bigdecimal.BigDecimal(rect.top))).multiply(scaleY);\r\n\r\n            this.setState(prevState => {\r\n               return {\r\n                x: prevState.x.add((newX.subtract((new bigdecimal.BigDecimal(this.state.width)).divide(two))).divide(new bigdecimal.BigDecimal(this.state.scale), 25, HALF_UP)),\r\n                y: prevState.y.add((newY.subtract((new bigdecimal.BigDecimal(this.state.height)).divide(two))).divide(new bigdecimal.BigDecimal(this.state.scale), 25, HALF_UP)),\r\n               i: prevState.i+=10,\r\n               scale: prevState.scale*2,\r\n               intro: false,\r\n               loading: true}\r\n            })\r\n                    if(this.state.scale*2 < 100000) {\r\n                        this.setState({scaleText : this.state.scale*2})\r\n                    }\r\n                    else {\r\n                        this.setState({scaleText : Number.parseFloat(this.state.scale*2).toExponential(1)})\r\n                    }\r\n\r\n this.refs.scale.classList.remove(\"fadeOutStay\")\r\n            this.refs.scale.classList.add(\"visible\")\r\n\r\n        }\r\n    }\r\n\r\n    imageLoaded(){\r\n\r\n                this.setState({loaded:true,\r\n                loading: false\r\n                })\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {                               //loads image to canvas to map bitmap to image for handleClick()\r\n        let canvas = this.refs.canvas\r\n        let ctx = canvas.getContext(\"2d\")\r\n        let ctxTwo = this.refs.canvasTwo.getContext(\"2d\")\r\n        let img = this.refs.image\r\n\r\n        img.onload = () => {\r\n            canvas.classList.remove(\"visible\");\r\n            ctxTwo.drawImage(img, 0, 0);\r\n            canvas.classList.add(\"fadeOut\");\r\n            setTimeout(function(){\r\n                ctx.drawImage(img, 0, 0);\r\n                canvas.classList.remove(\"fadeOut\");\r\n                canvas.classList.add(\"visible\");\r\n            }, 500);\r\n            this.setState({loading: false});\r\n\r\n    if (!this.state.intro) {\r\n           this.refs.scale.classList.remove(\"visible\")\r\n          this.refs.scale.classList.add(\"fadeOutStay\")\r\n          }\r\n          }\r\n\r\n      }\r\n\r\n    removeIntro() {\r\n        this.setState({intro: false});\r\n    }\r\n\r\n    render() {\r\n        var url = \"http://localhost:8080/mandelbrot?\" +\r\n                        \"width=\" + this.state.width +\r\n                        \"&height=\" + this.state.height +\r\n                        \"&x=\" + this.state.x +\r\n                        \"&y=\" + this.state.y +\r\n                        \"&scale=\" + this.state.scale +\r\n                        \"&i=\" + this.state.i;\r\n\r\n    console.log(url);\r\n        return(\r\n\r\n    <React.Fragment>\r\n\r\n        <div ref=\"menu\" className={\"centerContainer\"} style={{zIndex:5, opacity:1}}>\r\n                 <Menu />\r\n            </div>\r\n\r\n            <Blur ref=\"intro\" img={Placeholder} className={this.state.intro ? \"centerContainer\" : \"centerContainer overlay fadeOut\"} blurRadius={25} style={{zIndex:3}} onClick={this.removeIntro.bind(this)} enableStyles>\r\n\r\n            </Blur>\r\n\r\n            <div ref=\"scale\" className={\"centerContainer overlay\"} style={{zIndex:3, opacity:0}}>\r\n                <Scale scale={this.state.scaleText} className={\"center\"}/>\r\n            </div>\r\n\r\n\r\n\r\n            <canvas ref=\"canvas\" className=\"center\" style={{display: 'block', zIndex: \"1\"}} width={this.state.width} height={this.state.height} onClick={this.handleClick.bind(this)}/>\r\n            <canvas ref=\"canvasTwo\" className=\"center\" style={{display: 'block'}} width={this.state.width} height={this.state.height}/>\r\n            <img onLoad={this.imageLoaded.bind(this)} className=\"center\" ref=\"image\" src={url} alt=\"new\" style={{display: 'none'}} />;\r\n    </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fractal;"]},"metadata":{},"sourceType":"module"}